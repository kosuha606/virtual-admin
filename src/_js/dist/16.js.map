{"version":3,"sources":["webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./src/ui/form/MultilangField.vue?556b","webpack:///./src/ui/form/MultilangField.vue?2a42","webpack:///src/ui/form/MultilangField.vue","webpack:///./src/ui/form/MultilangField.vue"],"names":["normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","component","_vm","_h","$createElement","_c","_self","staticStyle","attrs","_v","_s","label","staticClass","_l","props","lang","langIndex","class","curLangIndex","on","$event","onChangeLang","code","is_default","key","counter","field","tag","test","id","model","value","langModel","callback","$$v","$set","expression","_e","mainModel"],"mappings":"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","file":"16.js","sourcesContent":["/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin-top\":\"10px\"}},[_c('label',{attrs:{\"for\":\"\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.label)+\"\\n    \")]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"langs btn-group\",attrs:{\"role\":\"group\"}},_vm._l((_vm.props.langs),function(lang,langIndex){return _c('button',{class:'btn btn-secondary'+(_vm.curLangIndex===langIndex ? ' active' : ''),attrs:{\"aria-pressed\":_vm.curLangIndex===langIndex},on:{\"click\":function($event){return _vm.onChangeLang(langIndex)}}},[_vm._v(\"\\n                \"+_vm._s(lang.code)+\"\\n            \")])}),0)]),_vm._v(\" \"),_vm._l((_vm.props.langs),function(lang,langIndex){return _c('div',[(lang.is_default === '0')?[(_vm.curLangIndex === langIndex)?_c(_vm.props.component,{key:'multiinput'+_vm.counter+_vm.field,tag:\"component\",attrs:{\"field\":_vm.field,\"props\":_vm.props,\"label\":''},on:{\"input\":function($event){return _vm.test(lang.id, $event)}},model:{value:(_vm.langModel[lang.id]),callback:function ($$v) {_vm.$set(_vm.langModel, lang.id, $$v)},expression:\"langModel[lang.id]\"}}):_vm._e()]:[(_vm.curLangIndex===langIndex)?_c(_vm.props.component,{key:'multiinput'+_vm.counter+_vm.field,tag:\"component\",attrs:{\"field\":_vm.field,\"props\":_vm.props,\"label\":''},model:{value:(_vm.mainModel),callback:function ($$v) {_vm.mainModel=$$v},expression:\"mainModel\"}}):_vm._e()]],2)})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultilangField.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultilangField.vue?vue&type=script&lang=js&\"","<template>\n    <div style=\"margin-top: 10px;\">\n\n        <label for=\"\">\n            {{ label }}\n        </label>\n\n        <div>\n            <div class=\"langs btn-group\" role=\"group\">\n                <button @click=\"onChangeLang(langIndex)\"\n                        :class=\"'btn btn-secondary'+(curLangIndex===langIndex ? ' active' : '')\"\n                        :aria-pressed=\"curLangIndex===langIndex\"\n                        v-for=\"(lang, langIndex) in props.langs\">\n                    {{ lang.code }}\n                </button>\n            </div>\n        </div>\n\n        <div v-for=\"(lang, langIndex) in props.langs\">\n            <template v-if=\"lang.is_default === '0'\">\n                <component\n                        :key=\"'multiinput'+counter+field\"\n                        v-if=\"curLangIndex === langIndex\"\n                        :is=\"props.component\"\n                        :field=\"field\"\n                        :props=\"props\"\n                        :label=\"''\"\n                        v-model=\"langModel[lang.id]\"\n                        @input=\"test(lang.id, $event)\"\n                ></component>\n            </template>\n            <template v-else>\n                <component\n                        :key=\"'multiinput'+counter+field\"\n                        v-if=\"curLangIndex===langIndex\"\n                        :is=\"props.component\"\n                        :field=\"field\"\n                        :props=\"props\"\n                        :label=\"''\"\n                        v-model=\"mainModel\"\n                ></component>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {each, clone} from 'lodash';\n\n    export default {\n        name: \"MultilangField\",\n        props: ['value', 'label', 'props', 'field', 'additionalValues'],\n        data() {\n            return {\n                counter: 1,\n                mainModel: null,\n                langModel: {},\n                curLangIndex: 0,\n            }\n        },\n        created() {\n            this.mainModel = this.value;\n        },\n        mounted() {\n            if (this.additionalValues) {\n                each(this.additionalValues.items, (item) => {\n                    let langId = 0;\n                    let langValue = '';\n                    each(item, (itemConfig) => {\n                        if (itemConfig.field === 'lang_id') {\n                            langId = itemConfig.value;\n                        }\n                        if (itemConfig.field === 'data') {\n                            langValue = itemConfig.value;\n                        }\n                    });\n\n                    this.langModel[langId] = clone(langValue);\n                    this.$forceUpdate();\n                    this.counter++;\n                });\n            }\n\n            this.emitLangsChange();\n        },\n        watch: {\n            mainModel(value) {\n                this.onChange(value);\n            },\n        },\n        methods: {\n            test(langId, langValue) {\n                this.langModel[langId] = langValue;\n                this.$forceUpdate();\n                this.emitLangsChange();\n            },\n            onChangeLang(langIndex) {\n                this.curLangIndex = langIndex;\n            },\n            onChange(e) {\n                this.$emit('input', e);\n            },\n            emitLangsChange() {\n                let items = [];\n\n                each(this.langModel, (item, index) => {\n                    items.push([\n                        {\n                            field: 'entity_id',\n                            value: this.props.entity_id,\n                        },\n                        {\n                            field: 'entity_class',\n                            value: this.props.entity_class,\n                        },\n                        {\n                            field: 'lang_id',\n                            value: index,\n                        },\n                        {\n                            field: 'attribute',\n                            value: this.field,\n                        },\n                        {\n                            field: 'data',\n                            value: clone(item),\n                        }\n                    ]);\n                });\n\n                this.$emit('additionalchange', {\n                    items: items,\n                    relationClass: this.props.relationClass,\n                });\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>","import { render, staticRenderFns } from \"./MultilangField.vue?vue&type=template&id=19985eff&scoped=true&\"\nimport script from \"./MultilangField.vue?vue&type=script&lang=js&\"\nexport * from \"./MultilangField.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"19985eff\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}